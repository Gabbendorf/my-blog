<%- include ../partials/header.ejs %>

<div class="likes">
  <%- include('../partials/likes-form.ejs', {value: 2}); %>
  Likes so far: <%= likesCount %><br>
  <a href="/"> Back to main page <i class="fas fa-home"></i></a>
</div>

    <main>
  <div class="article-title"> EventListener in JS </div>
  <div class="sub-title"> On the example of getting information from a HTML form. </div>

Events is a build-in module in Node.js.   <br>
EventListener is a method that fires a method in case of a specific event. <br>

  <div class="article-section"> EventListner syntax </div>

<pre><code>
element.addEventListener(event, function);
</code></pre>

* Element - where we want to <code>listen</code> - what scope intersts us. <br>
* First parameter - type of the event (like "click", "load" or "mousedown"). <br>
* Second parameter is the function we want to call when the event occurs. <br><br>

Example:
<pre><code>
window.addEventListener("load", function (event) {
  alert("hello!")
}
</code></pre>

<div class="article-section"> Relevant code </div>

<div class="article-section-2">  HTML </div>

<pre><code>
< html>
  < head>
    < script type="text/javascript" src="notepad.js"> </script>
  < /head>
  < body>
    < div class="container">
      < form id="form">
        < input id="note" type="textarea" name="note">
        < input id="submit" type="submit" value="create">
      < /form>
      < div id="notes"> </div>
    < /div>
    < div id="display"> </div>
  < /body>
< /html>
</code></pre>

<div class="article-section-2">  JS </div>

<pre><code>
function Notepad(name) {
  this.content = [];
}

function Note(string, id) {
  this.content = string;
  this.id = id
}

var counter = 1;

var notepad = new Notepad();

window.addEventListener("load", function (event) {

  var form = document.getElementById("form");

  form.addEventListener("submit", function (event) {

    var note = document.getElementById('note').value;

    event.preventDefault();

    sendData(note);
  });

});

function sendData(note) {
    var noteObject = new Note(note, counter);
    notepad.content.push(noteObject);
    displayNote(noteObject);
    counter += 1
}
</code></pre>

<div class="article-section"> How to use EventListener on an example of getting information from a HTML form - line by line </div>

1) We specify the first <code>event</code> - on load of the <code>window</code> we want to <code>listen</code> for actions in the whole <code>window</code>.<br>
<pre><code>
window.addEventListener("load", function (event)
</code></pre>
2) We get an element of html - a form - and set it to a variable. This element will be of interest to us in the next step..<br>
<pre><code>
var form = document.getElementById("form");
</code></pre>
3) Now we add a new <code>EventListener</code>. This time we don't want to look in the whole <code>window</code>, but only on the <code>form</code> specified in the step above. We also don't want to see events on load, but when there will be a <code>submit</code> action.
The name of the button in the html form doesn't matter - it could be named chicken or cat. The keyword <code>submit</code> used below is specific to <code>EventListener</code> and signalises that there was a submit action, regardles of the button's name.
<pre><code>
form.addEventListener("submit", function (event)
</code></pre>
4) We get the value of the textarea with a 'note' id and set it to a <code>note</code> variable.
<pre><code>
var note = document.getElementById('note').value;
</code></pre>
5) We prevent refreshing
<pre><code>
event.preventDefault();
</code></pre>
6) We send the <code>note</code> retrieved from the <code>form</code> to a <code>sendData</code> method as an argument.
<pre><code>
sendData(note);
</code></pre>

<div class="comments">
  <%- include('../partials/comments-form.ejs', {value: 2}); %>
  <%- include ../partials/comments-list.ejs %>
</div>

</main>

<%- include ../partials/footer.ejs %>
